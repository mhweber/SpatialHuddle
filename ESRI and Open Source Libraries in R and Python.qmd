---
title: "Blending open-source libraries in Python and R with ESRI"
author: "Marc Weber"
format: 
  revealjs:
    self-contained: true
editor: visual
jupyter: python3
---

## Watershed information in an API 
- Generating watershed information can be complicated for large watersheds when the desired metrics are needed at many sites across a large geographic extent
- For this reason we developed the [StreamCat](https://www.epa.gov/national-aquatic-resource-surveys/streamcat-dataset) and [LakeCat](https://www.epa.gov/national-aquatic-resource-surveys/lakecat-dataset) datasets

## StreamCat and LakeCat

::: columns

::: {.column width="20%"}
![](streamcattools-med-dpi.png)
:::

::: {.column width="40%"}
- StreamCat:
  - Watershed summaries of several hundred metrics for local catchments and watersheds
  - Uses NHDPlusV2 (~2.6 million stream segments)
  
:::

::: {.column width="40%"}
- LakeCat 
  - Watershed metrics for ~400,000 lakes across the conterminous U.S. 

:::

:::

## StreamCat and LakeCat

::: columns

::: {.column width="50%"}
![Geospatial framework of the StreamCat Dataset - from Hill et al. 2016](geospatialframework.png)

:::

::: {.column width="50%"}
![Geospatial framework for LakeCat - from Hill et al. (2018)](offnetwork.png)

:::

:::

## StreamCat and LakeCat


- Both datasets are now accessible through the [StreamCatTools package](https://usepa.github.io/StreamCatTools/)

- HyRiver



## Context of CodeBase for StreamCat

Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see <https://quarto.org/docs/presentations/>.

## First show example of HyRiver querying StreamCat data

```{python}
#|echo: true
#| output-location: slide
from pygeohydro import NWIS, WBD
from pynhd import NLDI, streamcat

nldi = NLDI()
upstream_network = nldi.navigate_byid(
    "comid", 23763517, "upstreamTributaries", "flowlines", distance=9999
)
m = upstream_network.plot()
m
```
## test
```{python}
m = upstream_network.explore()
m
```


## Then show querying StreamCat using StreamCatTools


## Show how we set up environment in Python

When you click the **Render** button a document will be generated that includes:

-   Content authored with markdown
-   Output from executable code

## Code

When you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:

```{python}
#|echo: true
1 + 1
```

## Brian Chastain link comparing `geopandas` and `spatially-enabled dataframes`
[Comparing Python Geospatial Frameworks](https://github.com/bchastain/devsummit2023/blob/main/geodataframes.ipynb)
