---
title: "Positron"
subtitle: "A Next Generation IDE from Posit"
author: "Marc Weber"
date: "April 28, 2025"
format: revealjs
embed-resources: true
execute: 
  eval: true
  error: false
  echo: true
  warning: false
  include: true
  progress: true
---

## First, A Caveat

-   Most material in these slides is borrowed shamelessly from the [Positron presentations](https://youtu.be/8uRcB34Hhsw) for the [2024 Posit conference](https://posit.co/blog/five-highlights-from-posit-conf-2024/)

## What is Positron?

-   [Positron](https://github.com/posit-dev/positron#readme) is a next-generation data science IDE (as opposed to software engineer IDE)
    -   Code-first mentality
    -   A polyglot IDE where you can do all your data science (currently support for just R and Python)
    -   Most IDEs out there built primarily for just one language (i.e. RStudio, Spyder, MATLAB)
    -   Uses languages as 'language packs' on the backend - highly extensible

## Why Positron?

-   You can use more than one language easily and seamlessly
-   Extensible and familiar
-   Design inspired by RStudio
-   Fundamentals based on OpenOSS - the open-source foundation of VSCode

## What does it look like?

::::: columns
::: {.column width="40%"}
-   [How / where running code]{style="color:lightblue;"}
-   [File you're running]{style="color:pink;"}
-   [Sandbox for development]{style="color:blue;"}
-   [Panes to understand code / data]{style="color:green;"}
:::

::: {.column width="60%"}
![](positron_panes.png){height="600," width="600"}
:::
:::::

## What does it look like?

::::: columns
::: {.column width="40%"}
-   [How / where running code]{style="color:lightblue;"}
-   [File you're running]{style="color:pink;"}
-   [Sandbox for development]{style="color:blue;"}
-   [Panes to understand code / data]{style="color:green;"}
:::

::: {.column width="60%"}
![](positron_panes2.png){height="600," width="600"}
:::
:::::

## What does it look like?

![](MyPositronSession.png)

## How does it work? Extensibility

-   Extensibility: languages are not 'baked in' - they come as 'language 'packs'
-   Programming languages communicate through an API with the IDE
-   Switch between languages and language versions easily in same session using the interpreter selector

::: {.column width="60%"}
![](interpreter_selecter.png){height="600," width="600"}
:::

## How Does it Work? Next-Gen Data Explorer

-   Poitron has a next-generation data explorer built in

![](DataExplorer.png)

## What does it look like? Next-Gen Data Explorer

![](DataExplorer2.png)

## What does it look like? Advanced Filtering in Data Explorer

![](Filtering.png)

## Why a New IDE Rather Than Enhancing RStudio?

-   RStudio is a two-process system

-   Everything in the main RStudio window is one process that runs R, saves files, generating plots, everything else

    -   This is why RStudio bogs down when big R processes running

-   Outside the main RStudio window is Electron, the chrome 'frame' around RStudio

## Why a New IDE Rather Than Enhancing RStudio?

![](LimitRstudio.png)

## Advantage of a Whole New IDE

-   Positron is a fork of CodeOSS, the open source foundation for VSCode

-   Taking CodeOSS Foundation and tooling it out for Data Science

    -   Great data explorer

    -   Environment selections

    -   Plot and visualization panes

## Advantage of a Whole New IDE

-   In Positron, R and Python are *extensions* the communicate with Positron through it's API

-   In RStudio, the IDE *is itself* part of the R process, so you get this:

![](Rcrash.png)

## How Positron Works as a Polyglot IDE

![](Jupyter.png)

## How Positron Works as a Polyglot IDE

![](Ark.png)